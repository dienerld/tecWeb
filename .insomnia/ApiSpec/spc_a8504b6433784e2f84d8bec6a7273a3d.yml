_id: spc_a8504b6433784e2f84d8bec6a7273a3d
type: ApiSpec
parentId: wrk_73b2d6f6c364491a8faa157b3d1fba62
modified: 1656432021812
created: 1654106373527
fileName: pigMan.yaml
contents: |-
  openapi: 3.0.0
  info:
    description: "Api para sistema de gerenciamento de granjas de suíno"
    version: 1.0.0
    title: Pig Manager
    termsOfService: http://swagger.io/terms/
    contact:
      email: diener.ld@outlook.com
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html
  tags:
    - name: stall
      description: Informações as baias
    - name: pig
      description: Informações sobre porcos
    - name: food
      description: Informações sobre gastos de rações
  servers:
    - url: http://localhost:8080/api/v1

  paths:
    # STALLS
    /stalls:
      # Get
      get:
        tags:
          - stall
        summary: Lista todas as baias
        description: ""
        operationId: listStall
        responses:
          "200":
            description: Operação bem sucedida
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      # JsonSchema:
                      id:
                        type: integer
                        format: Long
                      petId:
                        type: integer
                        format: int64
      #End Get

      # Post
      post:
        tags:
          - stall
        summary: Adiciona uma nova baia
        description: ""
        operationId: addStall
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stall"
          description: Dados da baia a ser adicionada
          required: true
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Stall"
          "400":
            description: Dados de baia inválidos
      # End Post

    "/stalls/{stallId}":
      # Get/id
      get:
        tags:
          - stall
        summary: Buscar baia pelo Id
        description:
          For valid response try integer IDs with value >= 1 and <= 10. Other
          values will generated exceptions
        operationId: getStallById
        parameters:
          - name: stallId
            in: path
            description: ID da baia a ser Buscada
            required: true
            schema:
              type: integer
              format: Long
        responses:
          "200":
            description: Operação bem sucedida
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Stall"
          "400":
            description: Id inválido
          "404":
            description: Baia não encontrada
      # End Get/id
      # Delete/id
      delete:
        tags:
          - stall
        summary: Remove baia existente
        description: ""
        operationId: deleteStall
        parameters:
          - name: stallId
            in: path
            description: ID da baia a ser excluída
            required: true
            schema:
              type: integer
              format: Long
              minimum: 1
        responses:
          "400":
            description: Id inválido
          "404":
            description: Baia não encontrada
      # End Delete/id

      # Put/id
      put:
        tags:
          - stall
        summary: Atualiza dados de um baia existente
        description: ""
        operationId: updateStall
        parameters:
          - name: stallId
            in: path
            description: ID of pet to return
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          $ref: "#/components/requestBodies/Stall"
        responses:
          "400":
            description: Id inválido
          "404":
            description: Porco não encontrado
      # End Put/id
    # End /stalls/id

    # PIGS
    # /pigs
    /pigs:
      post:
        tags:
          - pig
        summary: Adiciona um novo porco
        description: ""
        operationId: addPig
        requestBody:
          $ref: "#/components/requestBodies/Pig"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/responses/$ref/Pig"
          "405":
            description: Invalid input

      get:
        tags:
          - pig
        summary: Lista todos os porcos
        description: ""
        operationId: listPig
        responses:
          "200":
            description: Lista de porcos
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/responses/$ref/Pig"
          "400":
            description: Id inválido
    # end /pigs

    # start /pigs/id
    "/pigs/{pigId}":
      # Get/id
      get:
        tags:
          - pig
        summary: Find pet by ID
        description: Returns a single pet
        operationId: getPigById
        parameters:
          - name: pigId
            in: path
            description: Id do porco
            required: true
            schema:
              type: integer
              format: Long
        responses:
          "200":
            description: Operação bem sucedida
            content:
              application/json:
                schema:
                  $ref: "#/components/responses/$ref/Pig"
          "400":
            description: Id inválido
          "404":
            description: Porco não encontrado
      # End Get/id

      # Put/id
      put:
        tags:
          - pig
        summary: Atualiza dados de um porco existente
        description: ""
        operationId: updatePig
        parameters:
          - name: pigId
            in: path
            description: ID of pet to return
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          $ref: "#/components/requestBodies/Pig"
        responses:
          "204":
            description: Operação bem sucedida
          "400":
            description: Id inválido
          "404":
            description: Porco não encontrado
          "500":
            description: Internal server error
      # End Put/id

      # Delete/id
      delete:
        tags:
          - pig
        summary: Remove um porco existente
        description: ""
        operationId: deletePig
        parameters:
          - name: pigId
            in: path
            description: ID do porco a ser excluído
            required: true
            schema:
              type: integer
              format: Long
        responses:
          "204":
            description: Operação bem sucedida
          "400":
            description: Id inválido
          "404":
            description: Porco não encontrado
          "500":
            description: Internal server error
      # Delete/id
    # end /pigs/id
    # END PIGS

    /foods:
      get:
        tags:
          - food
        summary: Lista todos os gastos de ração
        description: ""
        operationId: listFood
        responses:
          "200":
            description: Operação bem sucedida
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Food"
      # Post
      post:
        tags:
          - food
        summary: Insere um novo gasto de ração
        description: ""
        operationId: createFood
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Food"
          description: Cria um novo gasto de ração
          required: true
        responses:
          default:
            description: Operação bem sucedida
      # End Post

    "/foods/{foodId}":
      # Put/id
      put:
        tags:
          - food
        summary: Atualiza dados de uma ração existente
        description: ""
        operationId: updateFood
        parameters:
          - name: foodId
            in: path
            description: ID da ração a ser atualizada
            required: true
            schema:
              type: integer
              format: Long
        requestBody:
          $ref: "#/components/requestBodies/Food"
        responses:
          "400":
            description: Id inválido
          "404":
            description: Cadastro de ração não encontrado
      # End Put/id

  components:
    requestBodies:
      Food:
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: "#/components/schemas/Food"
        description: List of user object
        required: true
      Pig:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pig"
      Stall:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Stall"

        description: Pet object that needs to be added to the store
        required: true
    schemas:
      Pig:
        type: object
        properties:
          sex:
            type: string
            format: Order Status
            enum:
              - M
              - F
          stallId:
            type: integer
            format: Long
          weight:
            type: number
            format: number
          lastVermifuge:
            type: string
            format: date-time
          entryDate:
            type: string
            format: date-time
          birthDate:
            type: string
            format: date-time
      Stall:
        type: object
        properties:
          name:
            type: string
            format: char

      Food:
        type: object
        properties:
          type:
            type: string
            format: char
            enum:
              - Lactação
              - Gestação
          name:
            type: string

    responses:
      $ref:
        Pig:
          type: object
          properties:
            id:
              type: integer
              format: Long
            sex:
              type: string
              format: char
              enum:
                - M
            weight:
              type: number
              format: number
            lastVermifuge:
              type: string
              format: date-time
              enum:
                - 2022-06-02T00:23:01.093Z
                - null
            entryDate:
              type: string
              format: date-time
            birthDate:
              type: string
              format: date-time
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
contentType: yaml
